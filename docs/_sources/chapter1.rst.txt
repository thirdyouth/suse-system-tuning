*************************************************************
系统优化常规注意事项
*************************************************************

这一章主要分析讲解如何发现性能问题的原因以及为这些问题提供解决方法。在开始进行系统优化之前，您需要确保已经排除了常规问题，并且已经发现了问题的根源（瓶颈）。而且还需要有一个详细的系统优化计划，因为随机的去尝试优化方法不会有助于问题的解决（还可能会让事情向更坏的方向发展）。

.. topic:: 系统优化常规方法

   1. 详细说明需要解决的问题。
   2. 如果系统退化是新发现的，确定是否由系统最新改动引发。
   3. 确定为什么会导致性能问题。
   4. 详细说明用于分析性能的标准。这一标准可能是延迟，吞吐量，同时登录的用户最大数量，或者活跃用户最大数量。
   5. 使用前一步中确定的标准测试当前性能。
   6. 确定应用程序耗费最多时间执行的子系统。
   7. 通过如下方法分析性能问题关键所在：

      1. 监控系统和应用程序。
      2. 分析数据，整理出哪里占用了时间。
   8. 优化上一步中确定的子系统。
   9. 在去除监视情况下，重新使用之前的标准测试当前性能。
   10. 如果性能仍然无法接受，重新开始步骤 3 。

确定需要解决的问题
===============================

在开始优化系统之前，需要尽可能详细的描述问题。如“系统很慢”这种就是一种毫无帮助的问题描述。例如，是否系统速度需要普遍提高或是在尖峰时刻提高，这将会有很大区别。

同时，你需要确保你的问题是可测试的，否则你将无法确定该优化是否解决了问题。你需要一直能够比较“前”和“后”的差异。至于使用哪种标准，这取决于你所关注的场景和应用。相关网络服务器的标准，例如，可以考虑：

* 延迟

  单个页面的推送时间，可以通过每秒的页面数，或者每秒的数据量。

* 活跃用户

   最大同时下载页面的用户量，同时可以保证收到页面处于可接受的延迟程度。

排除常规问题干扰
===============================

性能问题通常由网络或者硬件问题，错误，以及配置问题造成。请确保在尝试优化你的系统之前，排出如下列表中的问题：

* 检查 :command:`systemd` 输出日志（查看 "参考手册" 的 “journalctl:查询 :command:`systemd` 日志”） 中的异常项。
* 查看（使用 :command:`top` 或者 :command:`ps`）是否某个进程表现异常，占用了异常大数量的 CPU 时间或者内存。
* 通过检查 :file:`/proc/net/dev` 查看网络问题。
* 为了防止是物理硬盘导致的 I/O 问题，请确保不存在硬件问题（通过 :command:`smartmontools` 检查硬盘）或者磁盘满情况。
* 确保后台任务在系统负载低时执行。这些任务也需要以低优先级执行（通过 :command:`nice` 设置）。
* 如果机器上的几个服务使用了相同的资源，可以考虑将其中一些服务放到其他的服务器。
* 最后，确保你的软件及时更新。

找到问题根源
===============================

在优化系统时，找到问题的根源是最难的部分。openSUSE Leap 提供了很多工具来帮助你完成该任务。有关常规系统监视应用或者日志文件解析，详细信息可以查看 :doc:`系统监视 </part2>` 。如果该问题需要长期深入的分析，Linux 内核提供了一些方法来进行这些分析。相关内容请查看 :doc:`内核监视 </part3>` 。

如果你采集了很多的数据，它们都需要加以分析。首先，检查服务器硬件（内存，处理器，总线）和它的 I/O 容量（硬盘，网络）是否足够。如果这些基本条件满足，系统才可能值得优化。

一步一步优化
===============================

确保仔细对优化进行规划。需要特别注意的是一次优化一步。只有如此，你才可以测试该改动是否改善了系统，或是引入了负面的问题。每次优化活动都需要足够的时间进行测试，来确保你在可靠的数据上进行分析。如果你无法测试出好的效果，不要持续保留该改动。它可能会有一定的概率对将来产生不良的影响。